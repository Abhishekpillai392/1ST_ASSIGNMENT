Q.1 Create a table Result which stores the records of 5 students where the fields as 
    rollno, name, percentage.
=> 
create table demo(rollno number(2),name char(10),percent number(3));

insert into demo(rollno,name,percent) VALUES(10,'AVINASH',67);
insert into demo(rollno,name,percent) VALUES(11,'KAILASH',71);
insert into demo(rollno,name,percent) VALUES(12,'BHUSHAN',56);
insert into demo(rollno,name,percent) VALUES(13,'LOKESH',92);
insert into demo(rollno,name,percent) VALUES(15,'DHANUSH',79);

select * from demo;

===========================================================================================================
Q.2 Add a column in the Result table named as Grade.
=>

alter table Result add Grade varchar2(2);
=============================================================================================================
Q.3 Create a table marks which stores the marks of 5 subjects(physics,chemistry,maths,computer,english) and display the percentage. Store record of 5 students.

create table perc(NAME varchar2(10),PHYSICS number,CHEMISTRY number,MATHS number,COMPUTER number,ENGLISH number,PERCENTAGE as(((PHYSICS+CHEMISTRY+MATHS+COMPUTER+ENGLISH)*100)/500));

insert into perc(NAME,PHYSICS,CHEMISTRY,MATHS,COMPUTER,ENGLISH) values('AJAY',45,56,67,78,89);
insert into perc(NAME,PHYSICS,CHEMISTRY,MATHS,COMPUTER,ENGLISH) values('ABHI',46,51,77,88,89);
insert into perc(NAME,PHYSICS,CHEMISTRY,MATHS,COMPUTER,ENGLISH) values('AVINASH',59,63,64,72,65);
insert into perc(NAME,PHYSICS,CHEMISTRY,MATHS,COMPUTER,ENGLISH) values('ABHIJEET',35,37,47,38,56);
insert into perc(NAME,PHYSICS,CHEMISTRY,MATHS,COMPUTER,ENGLISH) values('ABHINAV',75,66,77,88,89);

select *from perc;

=============================================================================================================================
Q.4 Rename the table Result with StudentScore.
=>
alter table perc rename to Student_score;

select * from Student_score;

========================================================================================================================
/*5]*/
=>
create table column1(cid number(4),cname varchar2(15),city varchar2(10));
create table column2(cname varchar2(15),city varchar2(10));

insert into column1 values(101,'AVINASH','PUNE');
insert into column1 values(102,'DINESH','PATNA');
insert into column1 values(103,'JEEVAN','SOLAPUR');
insert into column1 values(104,'KAILASH','NAGPUR');

insert into column2(cname,city) select cname,city from column1;

select * from column2;

/*==============================================================================*/
/*6]*/

create table product4(pid number(4),pname varchar2(15),pqty number(4),pcost number(5));

insert into product4 values(11,'KEYBOARD',1,1000);
insert into product4 values(12,'MOUSE',6,500);
insert into product4 values(13,'JOYSTICK',2,1000);
insert into product4 values(14,'MONITOR',3,4000);
insert into product4 values(15,'CPU',3,9000);

select * from product4;
/*A]*/  
select * from product4 ORDER BY pqty ASC;
/*B]*/
select * from product4 ORDER BY pcost DESC;
/*C]*/
select * from product4 where pcost > 8000;
/*D]*/
select * from product4 where pid = 13 or pcost = 1000;

/*===================================================================*/
/*7]*/

create table cus(name varchar2(15),dob date,city varchar2(10));

insert all
into cus(name,dob,city) values('AVINASH',date '1998-09-03','PUNE')
into cus(name,dob,city) values('ARVIND',date '1999-01-21','SATARA')
into cus(name,dob,city) values('RUSHIKESH',date '1998-05-09','MUMBAI')

select * from dual;

select * from cus;

/*=====================================================================*/
/*8]*/

create table emp3(ename varchar2(15),salary number(5));

insert all
into emp3(ename,salary) values('LOKESH',25000)
into emp3(ename,salary) values('RAHUL',32000)
into emp3(ename,salary) values('AVINASH',28000)

select *from dual;

select * from emp3;

select * from emp3 ORDER BY salary DESC;

/*====================================================*/
/*9]*/
update emp3 set salary = 20000 where salary > 30000;

select * from emp3 ORDER BY salary DESC;

/*====================================================*/
/*10]*/

create table employee(pname varchar2(20),eid number(3),age number(3),dept varchar2(15),salary number(5));

insert all
into employee(pname,eid,age,dept,salary) values('MANISH',101,25,'CHEMICAL',20000)
into employee(pname,eid,age,dept,salary) values('AADIL',102,27,'MEHCANICAL',17000)
into employee(pname,eid,age,dept,salary) values('KAUHSIK',103,23,'SOFTWARE',32000)
into employee(pname,eid,age,dept,salary) values('SELMON',104,28,'CIVIL',24000)
into employee(pname,eid,age,dept,salary) values('VIVEK',102,27,'MEHCANICAL',25000)
into employee(pname,eid,age,dept,salary) values('ARJIT',104,28,'CIVIL',21000)
into employee(pname,eid,age,dept,salary) values('ASHWIN',101,25,'CHEMICAL',18000)
into employee(pname,eid,age,dept,salary) values('ABHISH',102,27,'MEHCANICAL',20000)

select * from dual;
select * from employee;

select dept,min(salary)AS TOTAL_INCOME from employee group by dept having min(salary)<18000;  
  
drop table employee;
/*================================================================================================*/
/*11]*/

create table population(state varchar2(20), population varchar2(15));

insert all
into population(state,population) values('MAHARASHTRA',110000000)
into population(state,population) values('RAJASTHAN',40000000)
into population(state,population) values('KARNATAKA',80000000)
into population(state,population) values('KERALA',30000000)

select * from dual;

select * from population;

select state,min(population)AS TOTAL_pop from population group by state having min(population)<40000000;
select state,max(population)AS TOTAL_pop from population group by state having max(population)>100000000;
select avg(population)AS TOTAL_pop from population;
select * from population ORDER BY state DESC;
select * from population ORDER BY state ASC;

/*================================================================================================*/
/*12]*/

create table Itemsales(Itemname varchar2(20),sales number(4),city varchar2(20));

insert all
into Itemsales(Itemname,sales,city) values('RAM',5,'PUNE')
into Itemsales(Itemname,sales,city) values('HD',15,'AHMEDABAD')
into Itemsales(Itemname,sales,city) values('MOUSE',30,'NAGPUR')
into Itemsales(Itemname,sales,city) values('RAM',5,'AHMEDABAD')
into Itemsales(Itemname,sales,city) values('HD',10,'NAGPUR')
into Itemsales(Itemname,sales,city) values('RAM',55,'NAGPUR')
into Itemsales(Itemname,sales,city) values('HD',40,'AURANGABAD')
into Itemsales(Itemname,sales,city) values('RAM',10,'MUMBAI')

select * from dual;

select * from Itemsales;

select city,count(sales) as SALES_FROM_CITIES from Itemsales group by city;

===================================================================================================
/*13]*/

create table email(email_id varchar2(20),password varchar2(20) check(length(password)>8));

insert into email values('abhishek28@gmail.com','123456789')

insert into email values('abhishek7@gmail.com','099787')

select * from email;

alter table email drop column password check;

drop table email;

/*================================================================================================*/
/*14]*/

create table cus3(name varchar2(20),phone number,check (phone >=1000000000));
insert into cus3 values('ABHISHEK',1267237587);

insert into cus3 values('AVINASH',5563278);
select * from cus3;

DROP TABLE CUS3;

commit;

/*==========================================================================*/
/*15]*/
create table person2(eid number(4),name varchar2(20),email varchar2(20), primary key(eid));
create table birthday(dob date,id number(04) CONSTRAINT ck_id REFERENCES person2(eid));

insert all
into person2(eid,name,email) values(101,'ASHLEY','ashley121')
into person2(eid,name,email) values(102,'LELE','leleponies238')
into person2(eid,name,email) values(103,'ASHWADEEP','ashwadeep123')
into person2(eid,name,email) values(104,'BRUCE','bruceleejnr2002')
into person2(eid,name,email) values(105,'MARTIN','martinguy203')
into person2(eid,name,email) values(106,'ASHWIN','ashwin2809')

select * from dual;

select * from person2;

drop table person2;
drop table birthday;

insert all
into birthday(dob,id) values(date '1998-05-30',101)
into birthday(dob,id) values(date '1999-01-01',102)
into birthday(dob,id) values(date '1998-09-01',103)
into birthday(dob,id) values(date '1998-06-28',104)
into birthday(dob,id) values(date '1999-03-10',105)
into birthday(dob,id) values(date '1998-12-03',106)

select * from dual;

select e.name,a.dob,e.email from person2 e,birthday a where e.eid = a.id;

commit;

/*========================================================================*/
/*16]*/
create table rcemployee(eid number,ename varchar2(20) NOT NULL,officeno number(15),Dateofjoining date NOT NULL,companyname varchar2(20) default 'DIGIT',salary number(5) check(salary > 0),primary key(eid),unique(officeno));
create table personaldetails(address varchar2(20) NOT NULL,contactno number(10) NOT NULL ,id number(4) CONSTRAINT co_id REFERENCES rcemployee(eid),CONSTRAINT ck_con unique(contactno)); 

insert all
into rcemployee(eid,ename,officeno,Dateofjoining,companyname,salary) values(101,'AVINASH',41010293,date '2020-10-01','GO_DIGIT',25000)
into rcemployee(eid,ename,officeno,Dateofjoining,companyname,salary) values(201,'ABHINAV',32928924,date '2020-09-30','GO_DADDY',35000)
into rcemployee(eid,ename,officeno,Dateofjoining,companyname,salary) values(301,'ASHLESHA',15060294,date '2020-07-16','TATA_MOTORS',55000)
into rcemployee(eid,ename,officeno,Dateofjoining,companyname,salary) values(401,'AVANTI',61710235,date '2020-10-01','RUBY_LTD',20000)

select * from dual;
select * from rcemployee;

insert all
into personaldetails(address,contactno,id) values('MERIL_STREET',9888823456,101)
into personaldetails(address,contactno,id) values('GB_ROAD',9842382752,201)
into personaldetails(address,contactno,id) values('YERAWADA',9668823416,301)
into personaldetails(address,contactno,id) values('TILAK_NAGAR',8188823345,401)

select * from dual;
select * from personaldetails;

select x.eid,x.ename,x.officeno,x.Dateofjoining,x.companyname,x.salary,y.address,y.contactno from rcemployee x,personaldetails y where x.eid = y.id;

drop table rcemployee;
drop table personaldetails;
commit;

/*====================================================================================================================================================*/
/*17]*/

create table students1(rollno number(3),cname varchar2(20) NOT NULL,enrollno varchar2(30),primary key(enrollno));
create table college2(college_id varchar2(20),college_name char(30),admission_date date,contact_no number(10),enrollment_id varchar2(30) CONSTRAINT con_enr REFERENCES students1(enrollno),primary key(college_id));
create table college3(college_id varchar2(20),college_name char(30),admission_date date,contact_no number(10),enrollment_id varchar2(30) CONSTRAINT cn_enr REFERENCES students1(enrollno),primary key(college_id));

insert all
into students1(rollno,cname,enrollno) values(01,'AVINASH','DUHEU344')
into students1(rollno,cname,enrollno) values(12,'SALMAN','DUHEU352')
into students1(rollno,cname,enrollno) values(06,'CHIRAG','DUHEU334')
into students1(rollno,cname,enrollno) values(21,'HERMANT','DUHEU349')
into students1(rollno,cname,enrollno) values(09,'QUINTON','DUHEU323')

select *from dual;

insert all
into college2(college_id,college_name,admission_date,contact_no,enrollment_id) values(1101,'JAIHIND',date '09-06-20',9887675765,'DUHEU334')
into college2(college_id,college_name,admission_date,contact_no,enrollment_id) values(1203,'MMCC',date '01-07-20',9187612744,'DUHEU352')
into college2(college_id,college_name,admission_date,contact_no,enrollment_id) values(1443,'FC',date '21-06-20',9287675765,'DUHEU323')
into college2(college_id,college_name,admission_date,contact_no,enrollment_id) values(1110,'MODERN','05-06-20',8187122765,'DUHEU349')
into college2(college_id,college_name,admission_date,contact_no,enrollment_id) values(1121,'WADIA',date '28-06-20',6287645765,'DUHEU344')

select * from dual;
select * from college2; 

select a.rollno,a.cname,a.enrollno,b.college_id,b.college_name,b.admission_date,b.contact_no,b.enrollment_id from students1 a,college2 b where a.enrollno = b.enrollment_id;

alter table college2 drop primary key;

insert all
into college3(college_id,college_name,admission_date,contact_no,enrollment_id) values(1101,'JAIHIND',date '09-06-20',9287675765,'DUHEU323')
into college3(college_id,college_name,admission_date,contact_no,enrollment_id) values(1203,'MMCC',date '01-07-20',9187612744,'DUHEU352')
into college3(college_id,college_name,admission_date,contact_no,enrollment_id) values(1443,'FC',date '21-06-20',9887675765,'DUHEU334')
into college3(college_id,college_name,admission_date,contact_no,enrollment_id) values(1110,'MODERN','05-06-20',6287645765,'DUHEU344')
into college3(college_id,college_name,admission_date,contact_no,enrollment_id) values(1121,'WADIA',date '28-06-20',8187122765,'DUHEU349')

select * from dual;
select * from college3;

select c.rollno,c.cname,c.enrollno,d.college_id,d.college_name,d.admission_date,d.contact_no,d.enrollment_id from students1 c,college3 d where c.enrollno = d.enrollment_id;

select college_name,count(college_name) as TOTAL_STUDENTS from college3 group by college_name;

drop table students1;                                                      
drop table college2;
commit;

==============================================================================================================================

/*18]*/

create table person4(person_name varchar2(20) not null,mobile number(10) unique,address varchar2(20));

insert all
into person4(person_name,mobile,address) values('ABHISHEK',6789909002,'GH STREET')
into person4(person_name,mobile,address) values('ABHINAV',9452987322,'GM ROAD')
into person4(person_name,mobile,address) values('ADIPURUSH',2323232202,'SHIVAJINAGAR')
into person4(person_name,mobile,address) values('ADITYA',8789213202,'YERWADA')
into person4(person_name,mobile,address) values('AADI',7885469023,'SANGVI')

select * from dual;

select * from person4;

create view v1_per as select * from person4 with read only;
create view v2_per as select * from person4;

select person_name,mobile from v1_per;
select person_name,address from v2_per;


================================================================================================================================

/*19]*/

SET SERVEROUTPUT ON 

DECLARE 
AREA real;
pi CONSTANT double precision := 3.14;
RADIUS real(4) := 4;
BEGIN
AREA := pi * RADIUS * RADIUS;
dbms_output.put_line('RADIUS : '|| RADIUS);
dbms_output.put_line('AREA OF THE CIRCLE : '|| AREA);
END;
/

DECLARE
v1 number;
v2 number;
BEGIN
v1 := 100;
v2 := 200;
    if(v1<v2)then
    dbms_output.put_line(v1 || ' IS LESS THAN '|| v2);
    elsif(v2<v1)then
    dbms_output.put_line(v2 || ' IS LESS THAN '|| v1);
    else
    dbms_output.put_line(v2 || ' LESS THAN '|| v1);
    end if;
end;

========================================================================
/*20*/
SET SERVEROUTPUT ON

DECLARE
i integer := 90;
j integer := 65;
a char;
BEGIN
WHILE i>=j LOOP
a := CHR(i);
dbms_output.put_line(a);
i := i-1;
END LOOP;
END;

=======================================================================
/*21*/
SET SERVEROUTPUT ON

DECLARE
i integer := 97;
j integer := 122;
a char;
BEGIN
WHILE i<=j LOOP
a := CHR(i);
dbms_output.put_line(a);
i := i+1;
END LOOP;
END;

=======================================================================
/*22]*/
DECLARE 
        v number :=10;
BEGIN
    WHILE v<=30 LOOP  
    IF mod(v,2)=0 THEN
    dbms_output.put_line('EVEN NUMBER : '||v);
    END IF;
    v := v+1; 
    END LOOP;
END;
==========================================================================
/*23]*/
DECLARE
C char;
BEGIN
FOR K IN REVERSE 65..90 LOOP
C := CHR(K);
dbms_output.put_line(C);
END LOOP;
END;

===========================================================================
/*24]*/

===========================================================================
/*25*/

DECLARE
TYPE names IS VARRAY(5) OF CHAR(20);
nm names;
BEGIN
nm := names('abhishek','abhinav','nimesh','nilesh','yogurt');
for k in 1..5 loop
dbms_output.put_line(UPPER(nm(k)));
end loop;
end;

============================================================================
/*26*/

DECLARE
TYPE names IS VARRAY(5) OF VARCHAR(20);
nm names;
BEGIN
nm := names('abhishek','abhinav','nimesh','nilesh','yogurt');
for k in 1..5 loop
dbms_output.put_line(UPPER(nm(k)) || ':' || length(nm(k)));
end loop;
end;

=============================================================================
/*27*/
DECLARE
c char := 'a';
BEGIN
dbms_output.put_line(UPPER(c));
END;

==============================================================================
/*28*/
CREATE OR REPLACE PROCEDURE demo_pr(x1 in real,x2 out real)
IS
pi CONSTANT double precision := 3.14;
BEGIN
x2 := pi * x1 *x1;
END;

DECLARE
i real;
BEGIN
demo_pr(10,i);
dbms_output.put_line('AREA OF CIRCLE : '|| i);
END;

=============================================================================
/*29]*/

CREATE OR REPLACE PROCEDURE demo_ptr2(x1 IN OUT REAL)
IS
BEGIN 
x1 := x1 * x1 * x1;
END;
DECLARE
i real;
BEGIN
i := 12;
demo_ptr2(i);
dbms_output.put_line('CUBE :'|| i);
END;

==================================================================================================================================
/*30]*/
/*a]   b]*/
create table tap(eid number(5) primary key,name varchar(30) not null,age number(3) not null,check(age > 18));

drop table tap;
select * from tap;

create or replace procedure INSERTRECORD(eid in number,name in varchar2,age in number)
IS
BEGIN
insert into tap values(eid,name,age);
END;

DECLARE
BEGIN
INSERTRECORD(101,'ABHISHEK',20);
INSERTRECORD(343,'ABHISH',34);
INSERTRECORD(208,'ABHINANDAN',23);
INSERTRECORD(657,'XAVIER',31);
INSERTRECORD(554,'SHRIKANT',32);
END;

DECLARE 
BEGIN
/*c]*/
update tap set eid = 201,name = 'NIMESH',age = 29 where eid = 208;
END;

DECLARE
BEGIN
/*d]*/
delete from tap where eid = 201;
END;

/*e]*/
END;

/*f]*/
select * from tap;

CREATE OR REPLACE PROCEDURE showrec(no in number)
IS
i number(5);
n varchar2(30);
a number(3);
BEGIN
select eid,name,age into i,n,a from tap where eid = no;
dbms_output.put_line(i || ' ' || n || ' ' || a);
END;

execute showrec(343);

/*g*/
DECLARE
BEGIN
select * from tap ORDER BY age asc;
END;

=================================================================================
/*31]*/

CREATE OR REPLACE FUNCTION insert_fun(name in varchar2,age in number) RETURN VARCHAR2
AS
BEGIN
return name;
END;

CREATE OR REPLACE FUNCTION ret_age(name in varchar2,age in number) RETURN number
AS
BEGIN
return age;
END;

DECLARE
nma varchar2(20);
gem varchar2(20);
BEGIN
nma := insert_fun('avinash',33);
gem := ret_age('avinash',33);
dbms_output.put_line(UPPER(nma) || ' ' || gem);
END;
=========================================================================================
/*32*/

CREATE TABLE EMPLOYEE5(ename varchar2(20), salary number(4));
select * from EMPLOYEE5;

CREATE OR REPLACE PROCEDURE insert_nmsal(ename in varchar2, salary in number) 
IS
BEGIN
insert into EMPLOYEE5 values(ename,salary);
END;

BEGIN
insert_nmsal('AVINASH',40000);
insert_nmsal('MAYUR',38000);
insert_nmsal('DIMINICK',35000);
END;

CREATE OR REPLACE FUNCTION avg_sal RETURN NUMBER
AS
c number;
BEGIN
select avg(salary) into c from EMPLOYEE5;
return c;
END;

DECLARE 
a number;
BEGIN
a := avg_sal;
dbms_output.put_line('AVERAGE SAL :' || a);
END;

============================================================================================
/*33]*/
select * from tap;

CREATE OR REPLACE PROCEDURE showrec3(no in number)
IS
record tap%rowtype;
BEGIN
select * into record from tap where eid = no;
dbms_output.put_line('RECORD : '||record.name || ' ' || record.age);
END;

EXECUTE showrec3(101);

==============================================================================================
/*34]*/

CREATE OR REPLACE FUNCTION demo_thy(x1 in integer) RETURN INTEGER
AS
a integer;
BEGIN
a := x1;
RETURN a;
END;

DECLARE
i integer := 35;
x2 integer := 0;
b integer;
BEGIN
b := demo_thy(i);

dbms_output.put_line(b / x2);

EXCEPTION

WHEN NO_DATA_FOUND then
dbms_output.put_line('NO DATA FOUND');
WHEN TOO_MANY_ROWS then
dbms_output.put_line('DATABASE GIVES TOO MANY ROWS');
WHEN ZERO_DIVIDE then
dbms_output.put_line('NUMBER CANNOT BE DIVIDED BY ZERO');
WHEN OTHERS THEN
dbms_output.put_line('UNKNOWN EXCEPTIONS');
END;

COMMIT;
================================================
/*35*/

create table IDCARD(name varchar2(30),age number(3),city varchar2(20));

CREATE OR REPLACE PROCEDURE INSERT_REC(name in varchar2, age in number, city in varchar2)
IS
myexception exception;
BEGIN
IF age <= 22 then
RAISE myexception;
ELSE
INSERT INTO IDCARD values(name,age,city);
END IF;

EXCEPTION
WHEN NO_DATA_FOUND THEN
dbms_output.put_line('NO DATA TO BE ENTERED');
WHEN myexception then
dbms_output.put_line('AGE MUST BE GREATER THAN 22');
END;

BEGIN
INSERT_REC('ABHINAV',21,'PUNE');
INSERT_REC('DURVESH',23,'MUMBAI');
INSERT_REC('TANMAY',22,'BANGALORE');
INSERT_REC('SOHAM',26,'NAGPUR');

dbms_output.put_line('DATA SUCCESSFULLY SAVED');
END;

SELECT * FROM IDCARD;
DROP TABLE IDCARD;
COMMIT;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Q.36 Create a table Movie which contains the movie name,release year,rating (1-5). Create a Statement level trigger which is executed after insertion of records.
     Create a Row level trigger on this table which is executed before updating the movie name when movie rating is greater than 0.
  Ans:



/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Q.37 Create a cursor on the Movie table which displays only those records where Movie rating is more than 3.
 Ans:

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Q.38 Create an Associative Array which maintains the population citywise.
 Ans:
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
